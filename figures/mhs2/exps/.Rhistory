head(data_small_avg)
data_large_avg = read.csv(get.csv.path("optim_large_avg.csv"))

head(data_large_avg)
data_large_avg
values(data_large_avg$R)
labels(data_large_avg$R)
set(data_large_avg$R)
(factor(data_large_avg$R))
(factor(data_large_avg$r))
labels(data_large_avg$r)
values(data <- values(data <- 
)))
(factor(data_large_avg$r))
(unique(data_large_avg$r))
plot.optim.large(data_large_avg)
plot.optim.large(data_large_avg)
x = plot.optim.large(data_large_avg)
x = geom_hline(aes(y=100))
x
x = plot.optim.large(data_large_avg)
x + geom_hline(aes(y=100))
x + geom_hline(y_intercept=100)
geom_hline(y_intercept=100)
x + geom_hline(y_intercept=1000)
x + geom_hline(y_intercept=1000)
x + geom_hline(y_intercept=1000,color="red")
geom_hline(y_intercept=1000,color="red")
x + geom_hline(yintercept=1000,color="red")
data_large_avg
aggregate(generator~., data_large_avg, mean)
data_large_avg
aggregate(generator~., data_large_avg, sum)
aggregate(generator~., data_large_avg, mean)
aggregate(generator~size, data_large_avg, mean)
data_large_avg[,mean(size), by=generator]
library(data.table)
install.packages( "data.table")
library(data.table)
data_large_avg[,mean(size), by=generator]
DT=data.table(data_large_avg)
DT[,mean(size), by=generator]
aggregate(generator~size, data_large_avg, mean)
aggregate(size~generator, data_large_avg, mean)
x = plot.optim.large(data_large_avg)
x
xplot.optim.large(data_large_avg)
plot.optim.large(data_large_avg)
plot.optim.large(data_large_avg)
plot.optim.large(data_large_avg)
plot.optim.large(data_large_avg)
plot.optim.large(data_large_avg)
xplot.optim.large(data_large_avg)
